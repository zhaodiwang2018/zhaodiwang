[uwsgi]
chdir = /var/zhaodi/zhaodi/zhaodi
#wsgi-file = zhaodi/zhaodi/wsgi.py
module = zhaodi.wsgi
#加载demosite/wsgi.py这个模块，在配置多站点时，不要启用
master = true
processes = 2
#listen = 120
#socket = 0.0.0.0:8000
http = 0.0.0.0:8000
pidfile = /var/run/uwsgi.pid
#vacuum = true #当服务器退出的时候自动删除unix socket文件和pid文件。
#enable-threads = true #允许用内嵌的语言启动线程。这将允许你在app程序中产生一个子线程
#buffer-size = 32768 #设置用于uwsgi包解析的内部缓存区大小为64k。默认是4k。
#reload-mercy = 8 #设置在平滑的重启（直到接收到的请求处理完才重启）一个工作子进程中，等待这个工作结束的最长秒数。这个配置会使在平滑地重启工作子进程中，如果工作进程结束时间超过了
#8秒就会被强行结束（忽略之前已经接收到的请求而直接结束）
#max-requests = 5000 #为每个工作进程设置请求数的上限。当一个工作进程处理的请求数达到这个值，那么该工作进程就会被回收重用（重启）。你可以使用这个选项来默默地对抗内存泄漏
#limit-as = 256 #通过使用POSIX/UNIX的setrlimit()函数来限制每个uWSGI进程的虚拟内存使用数。这个配置会限制uWSGI的进程占用虚拟内存不超过256M。如果虚拟内存已经达到256M，并继续申请虚>拟内存则会使程序报内存错误，本次的http请求将返回500错误。
#harakiri = 60 #一个请求花费的时间超过了这个harakiri超时时间，那么这个请求都会被丢弃，并且当前处理这个请求的工作进程会被回收再利用（即重启）
daemonize = /var/log/myapp_uwsgi.log
;DJANGO_SETTINGS_MODULE = zhaodi.settings
;WEBSOCKET_FACTORY_CLASS="dwebsocket.backends.uwsgi.factory.uWsgiWebSocketFactory"
disable-logging = true # 不记录请求信息的日志。只记录错误以及uWSGI内部消息到日志中
